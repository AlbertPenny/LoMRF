fluent={Loaded,Dead,Alive}

HoldsAt(fluent,time)
InitiatedAt(fluent,time)
TerminatedAt(fluent,time)
Happens(event,time)
Next(time,time)


//DEC7
Next(t1,t0) ^ InitiatedAt(f, t0) => HoldsAt(f, t1).
Next(t1,t0) ^ TerminatedAt(f, t0) => !HoldsAt(f, t1).

Next(t1,t0) ^ HoldsAt(f,t0) ^ !TerminatedAt(f, t0) => HoldsAt(f,t1).
Next(t1,t0) ^ !HoldsAt(f,t0) ^ !InitiatedAt(f, t0) => !HoldsAt(f,t1).

/**
 * Domain Specific Axioms
 */
2 Happens(Load,t) => InitiatedAt(Loaded,t) 
InitiatedAt(Loaded,t) => Happens(Load,t).

2 Happens(Shoot,t) ^ HoldsAt(Loaded,t) => TerminatedAt(Loaded,t) 
TerminatedAt(Loaded,t) => Happens(Shoot,t) ^ HoldsAt(Loaded,t).

2 Happens(Shoot,t) ^ HoldsAt(Loaded,t) => InitiatedAt(Dead,t)
InitiatedAt(Dead,t) => Happens(Shoot,t) ^ HoldsAt(Loaded,t).

2 Happens(Shoot,t) ^ HoldsAt(Loaded,t) => TerminatedAt(Alive,t)
TerminatedAt(Alive,t) => Happens(Shoot,t) ^ HoldsAt(Loaded,t).


!TerminatedAt(Dead, t).
!InitiatedAt(Alive,t).


//Initially:

HoldsAt(Alive,0).
!HoldsAt(Dead,0).
!HoldsAt(Loaded, 0).
!InitiatedAt(f,0).
!TerminatedAt(f,0).

